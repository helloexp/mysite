# -*- coding: utf-8 -*-
# Generated by Django 1.9 on 2016-04-18 00:34
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CVE',
            fields=[
                ('cve_id', models.CharField(db_column='CVEID', max_length=20, primary_key=True, serialize=False)),
                ('cwe_id', models.CharField(blank=True, db_column='CWEID', max_length=20, null=True)),
                ('vuln_type', models.FloatField(blank=True, db_column='TYPE', null=True)),
                ('cvss_id', models.FloatField(db_column='CVSS')),
                ('description', models.TextField(db_column='Description')),
                ('user', models.CharField(db_column='User', max_length=20)),
                ('update_date', models.DateField(auto_now=True)),
            ],
            options={
                'db_table': 'vulnerability_cve',
            },
        ),
        migrations.CreateModel(
            name='CVSS',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('version', models.CharField(max_length=20, null=True)),
                ('baseScore', models.FloatField(null=True)),
                ('accessComplexity', models.IntegerField()),
                ('authentication', models.IntegerField()),
                ('cveid', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='vulnerability.CVE')),
            ],
        ),
        migrations.CreateModel(
            name='EXPLOIT',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('edb_id', models.CharField(max_length=20)),
                ('link', models.TextField(null=True)),
                ('author', models.CharField(max_length=50, null=True)),
                ('publish_date', models.DateField(null=True)),
                ('cve', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vulnerability.CVE')),
            ],
        ),
        migrations.CreateModel(
            name='FUNC',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='ID')),
                ('patch_file', models.CharField(max_length=255, null=True)),
                ('patch_func', models.CharField(max_length=63, null=True)),
                ('func_code', models.CharField(db_column='Func_Code', max_length=20, null=True)),
            ],
            options={
                'db_table': 'vulnerability_func',
            },
        ),
        migrations.CreateModel(
            name='INFO',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='ID')),
                ('softeware', models.TextField(db_column='Software')),
                ('software_version', models.TextField(db_column='SoftwareVersion')),
                ('vuln_file', models.CharField(db_column='vuln_File', max_length=255, null=True)),
                ('vuln_func', models.TextField(blank=True, db_column='vuln_Func', null=True)),
                ('contain_version', models.TextField(blank=True, db_column='Contain_Version', null=True)),
                ('version_used', models.CharField(blank=True, db_column='Version_Used', max_length=20, null=True)),
                ('error_version', models.TextField(blank=True, db_column='Error_Version', null=True)),
                ('reuse_version', models.TextField(blank=True, db_column='Reuse_Version', null=True)),
                ('diff_link', models.TextField(db_column='Diff_Link', null=True)),
                ('diff_file', models.CharField(db_column='Diff_File', max_length=50, null=True)),
                ('check_flag', models.BooleanField(db_column='Check_Flag', default=False)),
                ('hasPatch', models.BooleanField(db_column='HasPatch', default=False)),
                ('hasReuse', models.BooleanField(db_column='HasReuse', default=False)),
                ('cve', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cve', to='vulnerability.CVE')),
            ],
            options={
                'db_table': 'vulnerability_info',
            },
        ),
        migrations.CreateModel(
            name='REUSE',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patch_func', models.CharField(max_length=63, null=True)),
                ('patch_file', models.CharField(max_length=255, null=True)),
                ('version', models.CharField(max_length=20, null=True)),
                ('code', models.TextField(null=True)),
                ('feature', models.TextField(null=True)),
                ('info_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vulnerability.INFO')),
            ],
        ),
        migrations.AddField(
            model_name='func',
            name='info_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='info', to='vulnerability.INFO'),
        ),
        migrations.AlterUniqueTogether(
            name='reuse',
            unique_together=set([('info_id', 'patch_func')]),
        ),
        migrations.AlterUniqueTogether(
            name='exploit',
            unique_together=set([('cve', 'edb_id')]),
        ),
    ]
