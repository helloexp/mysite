diff --git a/epan/dissectors/packet-websocket.c b/epan/dissectors/packet-websocket.c
index
--- trunk/epan/dissectors/packet-websocket.c	2013/03/16 00:00:21	48335
+++ trunk/epan/dissectors/packet-websocket.c	2013/03/16 02:56:17	48336
@@ -342,6 +342,13 @@
   mask = (tvb_get_guint8(tvb, 1) & MASK_WS_MASK) >> 4;
   payload_offset = mask_offset + (mask ? 4 : 0);
 
+  if (payload_offset + payload_length < payload_length) {
+    /* Integer overflow, which means the packet contains a ridiculous
+     * payload length. Just take what we've got available.
+     * See bug https://bugs.wireshark.org/bugzilla/show_bug.cgi?id=8448 */
+    payload_length = tvb_reported_length_remaining(tvb, payload_offset);
+  }
+
   if(length < payload_offset + payload_length){
     /* XXXX Warning desegment_len is 32 bits */
     pinfo->desegment_len = payload_offset + payload_length - length;

diff --git a/epan/dissectors/packet-mysql.c b/epan/dissectors/packet-mysql.c
index
--- trunk/epan/dissectors/packet-mysql.c	2013/04/17 15:07:48	48893
+++ trunk/epan/dissectors/packet-mysql.c	2013/04/17 15:38:35	48894
@@ -1762,7 +1762,13 @@
 	else
 	{
 		proto_tree_add_item(tree, field, tvb, offset, (int)lelen, ENC_NA);
-		offset += (int)lelen;
+		/* Prevent infinite loop due to overflow */
+		if (offset + (int)lelen < offset) {
+			offset = tvb_reported_length(tvb);
+		}
+		else {
+			offset += (int)lelen;
+		}
 	}
 	return offset;
 }
@@ -2661,3 +2667,15 @@
 	dissector_add_uint("tcp.port", TCP_PORT_MySQL, mysql_handle);
 }
 
+/*
+ * Editor modelines  -  http://www.wireshark.org/tools/modelines.html
+ *
+ * Local variables:
+ * c-basic-offset: 8
+ * tab-width: 8
+ * indent-tabs-mode: t
+ * End:
+ *
+ * vi: set shiftwidth=8 tabstop=8 noexpandtab:
+ * :indentSize=8:tabSize=8:noTabs=false:
+ */

diff --git a/epan/dissectors/packet-etch.c b/epan/dissectors/packet-etch.c
index
--- trunk/epan/dissectors/packet-etch.c	2013/04/18 19:31:24	48918
+++ trunk/epan/dissectors/packet-etch.c	2013/04/18 19:45:22	48919
@@ -444,6 +444,12 @@
   proto_tree_add_item(etch_tree, hf_etch_length, tvb, *offset,
                       length_of_array_length_type, ENC_BIG_ENDIAN);
   (*offset) += length_of_array_length_type;
+
+  if (*offset + length < *offset) {
+    /* overflow case
+     * https://bugs.wireshark.org/bugzilla/show_bug.cgi?id=8464 */
+    length = tvb_reported_length_remaining(tvb, *offset);
+  }
   return length;
 }
 
@@ -995,3 +1001,16 @@
     read_hashed_symbols_from_dir(gbl_keytab_folder);
   }
 }
+
+/*
+ * Editor modelines  -  http://www.wireshark.org/tools/modelines.html
+ *
+ * Local variables:
+ * c-basic-offset: 2
+ * tab-width: 8
+ * indent-tabs-mode: nil
+ * End:
+ *
+ * vi: set shiftwidth=2 tabstop=8 expandtab:
+ * :indentSize=2:tabSize=8:noTabs=true:
+ */